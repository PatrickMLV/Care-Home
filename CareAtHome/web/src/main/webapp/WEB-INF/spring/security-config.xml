<beans xmlns="http://www.springframework.org/schema/beans"
    xmlns:s="http://www.springframework.org/schema/security"
    xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
    xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-3.0.xsd
    http://www.springframework.org/schema/security http://www.springframework.org/schema/security/spring-security-3.1.xsd">

    <s:http>
    	<!-- 
    	
    	c'est désactivé !
    	
    	<s:intercept-url pattern="/**" access="ROLE_GROUP1"/>
    	
    	 -->
        <!-- <s:intercept-url pattern="/secure/extreme/**" access="ROLE_SUPERVISOR"/>
        <s:intercept-url pattern="/secure/**" access="IS_AUTHENTICATED_REMEMBERED" />
        <s:intercept-url pattern="/**" access="IS_AUTHENTICATED_ANONYMOUSLY" /> -->

        <s:form-login />
        <s:anonymous />
        <s:logout />
    </s:http>


    <!-- Simple namespace-based configuration -->

    <!-- <s:ldap-server ldif="classpath:users.ldif" port="33389"/> -->

    <s:authentication-manager alias="authenticationManager">
        <s:ldap-authentication-provider
            group-search-filter="member={0}"
            group-search-base="ou=Groups"
            user-search-base="ou=Users"
            user-search-filter="uid={0}"
        />
        <s:authentication-provider ref='secondLdapProvider' />
    </s:authentication-manager>


    <!-- Traditional Bean version of the same configuration -->

    <!-- This bean points at the embedded directory server created by the ldap-server element above  -->
    <bean id="contextSource" class="org.springframework.security.ldap.DefaultSpringSecurityContextSource">
        <constructor-arg value="ldap://localhost:10389/dc=example,dc=com"/>
    </bean>

    <bean id="secondLdapProvider" class="org.springframework.security.ldap.authentication.LdapAuthenticationProvider">
        <constructor-arg>
            <bean class="org.springframework.security.ldap.authentication.BindAuthenticator">
                <constructor-arg ref="contextSource" />
                <property name="userSearch">
                    <bean id="userSearch" class="org.springframework.security.ldap.search.FilterBasedLdapUserSearch">
                      <constructor-arg index="0" value="ou=Users"/>
                      <constructor-arg index="1" value="(uid={0})"/>
                      <constructor-arg index="2" ref="contextSource" />
                    </bean>
                </property>
            </bean>
        </constructor-arg>
        <constructor-arg>
            <bean class="org.springframework.security.ldap.userdetails.DefaultLdapAuthoritiesPopulator">
                <constructor-arg ref="contextSource" />
                <constructor-arg value="ou=Groups" />
                <property name="groupSearchFilter" value="(member={0})"/>
                <property name="rolePrefix" value="ROLE_"/>
                <property name="searchSubtree" value="true"/>
                <property name="convertToUpperCase" value="true"/>
            </bean>
        </constructor-arg>
    </bean>

</beans>
